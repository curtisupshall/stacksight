PROJECT_TYPE_DESCRIPTIONS = {
    'web-app': 'web application repository',
    'desktop-app': 'desktop application repository',
    'mobile-app': 'mobile application repository',
    'documentation-repo': 'documentation database',
    'iac': 'deployment config repository',
    'cli': 'command line interface repository',
    'api': 'api repository',
    'data-science': 'data science repository'
}

LANG_FILE_PATTERNS = {
    'javascript': r'.*\.js$',
    'typescript': r'.*\.ts$',
    'python': r'.*\.py$',
    'java': r'.*\.java$',
    'php': r'.*\.php$',
    'c': r'.*\.c$',
    'c#': r'.*\.cs$',
    'c++': r'.*\.cpp$|.*\.cxx$|.*\.cc$',
    'ruby': r'.*\.rb$',
    'swift': r'.*\.swift$',
    'kotlin': r'.*\.kt$',
    'go': r'.*\.go$',
    'rust': r'.*\.rs$',
    'scala': r'.*\.scala$',
    'perl': r'.*\.pl$',
    'lua': r'.*\.lua$',
    'elixir': r'.*\.ex$|.*\.exs$',
    'clojure': r'.*\.clj$|.*\.cljs$',
    'dart': r'.*\.dart$',
    'r': r'.*\.r$',
    'matlab': r'.*\.m$',
    'bash': r'.*\.sh$',
    'shell': r'.*\.sh$',
    'powershell': r'.*\.ps1$',
    'groovy': r'.*\.groovy$',
    'haskell': r'.*\.hs$',
    'erlang': r'.*\.erl$',
    'objective-c': r'.*\.m$|.*\.mm$',
    'vb.net': r'.*\.vb$',
    'assembly': r'.*\.asm$',
    'f#': r'.*\.fs$',
    'julia': r'.*\.jl$',
    'smalltalk': r'.*\.st$',
    'ada': r'.*\.ada$|.*\.ads$|.*\.adb$',
    'fortran': r'.*\.f$|.*\.f90$|.*\.f95$',
    'cobol': r'.*\.cbl$|.*\.cob$',
    'pascal': r'.*\.pas$',
    'vba': r'.*\.bas$',
    'ocaml': r'.*\.ml$|.*\.mli$',
    'apl': r'.*\.apl$',
    'racket': r'.*\.rkt$',
    'lisp': r'.*\.lisp$|.*\.lsp$',
    'scheme': r'.*\.scm$|.*\.ss$',
    'html': r'.*\.html?$',
    'css': r'.*\.css$',
    'codon': r'.*\.codon$'
}

TECH_STACK_PATTERNS_BY_CATEGORY = {
    'frontend': {
        'react': {
            'knownFiles': r'.*\.(jsx|tsx)$',
            'knownContent': r'import React', # Example of content to match in a JSX/TSX file
            'belongsToManifest': r'package\.json$',
            'hasPackageName': r'"\s*(react|react-dom)\s*"\s*":\s*".+?"'
        },
        'vue': {
            'knownFiles': r'.*\.vue$',  # Matches files with a .vue extension
            'knownContent': r'(<template>|<script>|import Vue from ["\']vue["\'])',  # Matches Vue component blocks or Vue import statements
            'belongsToManifest': r'package\.json$',  # Matches package.json file
            'hasPackageName': r'"\s*vue\s*"\s*:\s*".+?"'  # Matches Vue entry in package.json dependencies
        },
        'angular': {
            'knownFiles': r'.*\.(ts|html)$',
            'knownContent': r'@Component\(|import {.*} from ["\']@angular',
            'belongsToManifest': r'package\.json$',
            'hasPackageName': r'"\s*(@angular/core|@angular/common)\s*"\s*":\s*".+?"'
        },
        'material-ui': {
            'knownFiles': r'.*\.(js|jsx|tsx)$',
            'knownContent': r'import {.*} from ["\']@material-ui/core',
            'belongsToManifest': r'package\.json$',
            'hasPackageName': r'"\s*@material-ui/core\s*"\s*":\s*".+?"'
        },
        'bootstrap': {
            'knownFiles': r'.*\.(css|scss|js)$',
            'knownContent': r'import ["\']bootstrap["\'];|class=["\']btn btn-',
            'belongsToManifest': r'package\.json$',
            'hasPackageName': r'"\s*bootstrap\s*"\s*":\s*".+?"'
        },
        'jquery': {
            'knownFiles': r'.*\.js$',
            'knownContent': r'import ["\']jquery["\'];|\$\(.*\)',
            'belongsToManifest': r'package\.json$',
            'hasPackageName': r'"\s*jquery\s*"\s*":\s*".+?"'
        },
        'svelte': {
            'knownFiles': r'.*\.svelte$',
            'knownContent': r'<script>|import {.*} from ["\']svelte',
            'belongsToManifest': r'package\.json$',
            'hasPackageName': r'"\s*svelte\s*"\s*":\s*".+?"'
        },
        'ember': {
            'knownFiles': r'.*\.(js|hbs)$',
            'knownContent': r'import Ember from ["\']ember["\'];|<Ember.Component>',
            'belongsToManifest': r'package\.json$',
            'hasPackageName': r'"\s*ember-source\s*"\s*":\s*".+?"'
        },
        'tailwindcss': {
            'knownFiles': r'.*\.(css|js)$',
            'knownContent': r'@tailwind |import ["\']tailwindcss["\'];',
            'belongsToManifest': r'package\.json$',
            'hasPackageName': r'"\s*tailwindcss\s*"\s*":\s*".+?"'
        },
        'bulma': {
            'knownFiles': r'.*\.css$',
            'knownContent': r'@import ["\']bulma',
            'belongsToManifest': r'package\.json$',
            'hasPackageName': r'"\s*bulma\s*"\s*":\s*".+?"'
        },
        'alpine.js': {
            'knownFiles': r'.*\.js$',
            'knownContent': r'import Alpine from ["\']alpinejs["\'];|x-data=',
            'belongsToManifest': r'package\.json$',
            'hasPackageName': r'"\s*alpinejs\s*"\s*":\s*".+?"'
        },
        'handlebars': {
            'knownFiles': r'.*\.hbs$',
            'knownContent': r'{{#each .*}}|{{#if .*}}',
            'belongsToManifest': r'package\.json$',
            'hasPackageName': r'"\s*handlebars\s*"\s*":\s*".+?"'
        },
        'shad-cdn': {
            'knownFiles': r'.*\.js$',
            'knownContent': r'import {.*} from ["\']shadcdn["\'];',
            'belongsToManifest': r'package\.json$',
            'hasPackageName': r'"\s*shadcdn\s*"\s*":\s*".+?"'
        },
        'sass': {
            'knownFiles': r'.*\.(scss|sass)$',
            'knownContent': r'@use|@import|@mixin|@include|\$[a-zA-Z\-_]+',
            'belongsToManifest': r'package\.json$',
            'hasPackageName': r'"\s*sass\s*"\s*":\s*".+?"'
        }
    },
    'backend': [
        'node.js',
        'flask',
        'laravel',
        'django',
        'spring',
        'express',
        'rails',
        'asp.net',
        'fastapi', 
        'phoenix',
        
    ],
    'server': [
        'caddy',
        'apache',
        'nginx',
        'tomcat',
    ],
    'general': [
        'dot-net',
        'dot-net-core',
    ],
    'authentication': [
        'keycloak',
        'laravel-passport',
        'next-auth',
        'oauth2',
        'auth0',
        'aws-cognito',
        'firebase-auth', 
        'okta',
        'jwt',
        'saml',
        'azure-ad',
        'openid-connect',
        'apache-shiro',
    ],
    'database': [
        'postgres',
        'couchdb', 
        'mysql', 
        'mongodb',
        'redis',
        'oracle',
        'sql-server',
        'sqlite',
        'cassandra', 
        'dynamo-db',
        'neo4j',
        'firebase',
        'riak',
        'db2',
        'hbase',
        'influxdb',
        'arangodb', 
        'memsql',
        'cockroachdb'
    ],
    'object-storage': [
        's3',
        'azure-blob-storage',
        'google-cloud-storage',
        'backblaze-b2',
        'digitalocean-spaces', 
        'openstack-swift',
        'minio',
        'ceph',
        'oracle-cloud-storage',
        'ibm-cloud-object-storage', 
        'wasabi',
    ],
    'spatial': [
        'postgis',
        'qgis',
        'arcgis',
        'geoserver',
        'leaflet',
        'mapbox',
        'openlayers',
        'turf.js',
        's2geometry', 
        'geotools',
        'geopandas',
        'h3',
        'mapnik',
        'cesium',
        'gdal',
        'ogr',
        'shapely',
        'fiona',
        'rgeo',
        'pyproj'
    ],
    'search': [
        'typesense',
        'elasticsearch',
        'solr',
        'algolia',
        'lucene',
        'sphinx',
        'bleve',
        'whoosh',
        'xapian', 
        'apache-nutch',
        'open-search',
        'meilisearch',
    ],
    'deployment': [
        'aws',
        'openshift',
        'heroku',
        'netlify',
        'azure',
        'google-cloud',
        'digitalocean',
        'vultr', 
        'linode',
        'kubernetes',
        'docker-swarm',
        'ansible',
        'terraform',
        'puppet',
        'chef',
        'twilio',
        'tekton'
    ],
    'testing': [
        'jest',
        'phpunit',
        'selenium',
        'mocha',
        'jasmine',
        'cypress',
        'karma',
        'enzyme',
        'junit',
        'pytest',
        'postman'
    ],
    'cache': [
        'valkey',
        'redis',
        'elasticache',
        'memcached',
        'varnish',
        'hazelcast',
        'nginx-cache',
        'apache-traffic-server', 
        'lru-cache',
        'couchbase',
        'cloudflare',
        'fastly',
        'keycdn',
        'stackpath',
        'edgecast',
        'google-cloud-cdn',
        'amazon-cloudfront'
    ],
    'mailing': [
        'sendgrid',
        'mailgun',
        'mailchimp',
        'amazon-ses',
    ],
    'analytics-and-monitoring': [
        # Analytics
        'google-analytics',
        'mixpanel',
        'amplitude',
        'hotjar',
        'segment',
        'new-relic',
        'adobe-analytics',
        'sentry',
        'tableau',
        'power-bi',
        'kibana',
    
        'datadog',
        'prometheus',
        'grafana',
        'splunk',
    ],
    'security': [
        'sonarqube',
    ],
    'logging': [
        'winston',
        'log4j',
        'bunyan',
        'logback',
        'slf4j',
        'log4net',
        'morgan', 
        'datadog-logs',
    ],
    'internationalization': [
        'i18next',
        'react-intl',
        'vue-i18n',
        'angular-translate',
        'gettext',
        'polyglot.js',
        'formatjs', 
    ],
    'mobile': [
        'react-native',
        'flutter',
        'cordova',
        'ionic',
        'native-script',
        'android-sdk',
        'ruby-motion',
        'corona-sdk', 
        'unity',
        'unreal-engine',
    ],
    'machine-learning-and-data-science': [
        # ML
        'pytorch',
        'tensorflow',
        'keras',
        'scikit-learn',
        'caffe',
        'open-ai'
        'xgboost'
        
        # Data Science
        'jupyter',    
        'numpy',      
        'pandas',     
        'matplotlib',
        'seaborn',   
        'scipy',
        'hadoop',
        'map-reduce'   
    ],
    'virtualization': [
        'docker',
        'kubernetes',
        'vmware',
        'virtualbox',
        'hyper-v',
        'qemu',
        'red-hat-virtualization',
    ],
    'ci_cd': [
        'gradle',
        'jenkins',          
        'circleci',         
        'travis-ci',        
        'gitlab-ci',        
        'github-actions',   
        'bamboo',           
        'teamcity',         
        'azure-devops',     
        'bitbucket-pipelines'
    ],
    'package-managers': [
        'npm',        
        'yarn',       
        'pip',        
        'conda',      
        'maven',      
        'gradle',     
        'nuget',      
        'composer',   
        'gem',        
        'cargo',      
        'apt',        
        'yum',        
        'dnf',        
        'zypper',     
        'pacman',     
        'homebrew',   
        'chocolatey', 
        'snap',       
        'flatpak',    
        'rpm',        
        'brew',       
        'apk',        
        'pypi',       
        'bower',      
    ]
}
